{
  "D:\\StoryGenerator\\story_backend\\serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "D:\\StoryGenerator\\story_backend\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "storytime-user-service",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "environment": {
          "MONGO_URI": "mongodb+srv://pravraju:pravinraju1234@cluster0.ae9kr3i.mongodb.net/StoryTellerDB?retryWrites=true&w=majority&appName=Cluster0",
          "JWT_SECRET": "<REDACTED>"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "s3:*"
            ],
            "Resource": "*"
          }
        ],
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "registerUser": {
          "handler": "handlers/registerUser.handler",
          "events": [
            {
              "http": {
                "path": "api/users/register",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-registerUser"
        },
        "loginUser": {
          "handler": "handlers/loginUser.handler",
          "events": [
            {
              "http": {
                "path": "api/users/login",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-loginUser"
        },
        "getAllUsers": {
          "handler": "handlers/getAllUsers.handler",
          "events": [
            {
              "http": {
                "path": "api/users/all",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-getAllUsers"
        },
        "getUserProfile": {
          "handler": "handlers/getUserProfile.handler",
          "events": [
            {
              "http": {
                "path": "api/users/{id}",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-getUserProfile"
        },
        "updateUserProfile": {
          "handler": "handlers/updateUserProfile.handler",
          "events": [
            {
              "http": {
                "path": "api/users/profile",
                "method": "put",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-updateUserProfile"
        },
        "getUserStories": {
          "handler": "handlers/getUserStories.handler",
          "events": [
            {
              "http": {
                "path": "api/stories/getUserStories",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-getUserStories"
        },
        "getAllStories": {
          "handler": "handlers/getAllStories.handler",
          "events": [
            {
              "http": {
                "path": "api/stories",
                "method": "get",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-getAllStories"
        },
        "deleteStory": {
          "handler": "handlers/deleteStory.handler",
          "events": [
            {
              "http": {
                "path": "api/stories/{id}",
                "method": "delete",
                "cors": {
                  "origin": "http://localhost:3000",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "name": "storytime-user-service-dev-deleteStory"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "environment": {
        "MONGO_URI": "mongodb+srv://pravraju:pravinraju1234@cluster0.ae9kr3i.mongodb.net/StoryTellerDB?retryWrites=true&w=majority&appName=Cluster0",
        "JWT_SECRET": "<REDACTED>"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": "*"
        }
      ],
      "stage": "dev",
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: storytime-user-service\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: us-east-1\r\n  environment:\r\n    MONGO_URI: ${env:MONGO_URI}\r\n    JWT_SECRET: ${env:JWT_SECRET}\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - s3:*\r\n      Resource: \"*\"\r\n\r\nfunctions:\r\n\r\n  registerUser:\r\n    handler: handlers/registerUser.handler\r\n    events:\r\n      - http:\r\n          path: api/users/register\r\n          method: post\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  loginUser:\r\n    handler: handlers/loginUser.handler\r\n    events:\r\n      - http:\r\n          path: api/users/login\r\n          method: post\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  getAllUsers:\r\n    handler: handlers/getAllUsers.handler\r\n    events:\r\n      - http:\r\n          path: api/users/all\r\n          method: get\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  getUserProfile:\r\n    handler: handlers/getUserProfile.handler\r\n    events:\r\n      - http:\r\n          path: api/users/{id}\r\n          method: get\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  updateUserProfile:\r\n    handler: handlers/updateUserProfile.handler\r\n    events:\r\n      - http:\r\n          path: api/users/profile\r\n          method: put\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  getUserStories:\r\n    handler: handlers/getUserStories.handler\r\n    events:\r\n      - http:\r\n          path: api/stories/getUserStories\r\n          method: get\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  getAllStories:\r\n    handler: handlers/getAllStories.handler\r\n    events:\r\n      - http:\r\n          path: api/stories\r\n          method: get\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  deleteStory:\r\n    handler: handlers/deleteStory.handler\r\n    events:\r\n      - http:\r\n          path: api/stories/{id}\r\n          method: delete\r\n          cors:\r\n            origin: http://localhost:3000\r\n            headers: [Content-Type, Authorization, Accept]\r\n            allowCredentials: true\r\n\r\n  \r\n\r\n\r\n \r\n\r\n\r\n",
    "command": [
      "logs"
    ],
    "options": {
      "stage": "dev",
      "function": "getAllStories"
    },
    "orgId": "26bb6359-4f6c-4e59-968d-bb23f927b5bc",
    "orgName": "storytimeai",
    "userId": "KXYLQ0vdppdnJ1Ggp6",
    "userName": "storytimeai",
    "serviceProviderAwsAccountId": "367265344708",
    "serviceProviderAwsCfStackName": "storytime-user-service-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:367265344708:stack/storytime-user-service-dev/a783f1e0-53df-11f0-a3da-0affc4ecda95",
    "serviceProviderAwsCfStackCreated": "2025-06-28T05:20:50.289Z",
    "serviceProviderAwsCfStackUpdated": "2025-06-29T15:33:18.094Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "RegisterUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-registerUser:40",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-RegisterUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetUserStoriesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-getUserStories:25",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-GetUserStoriesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllStoriesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-getAllStories:25",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-GetAllStoriesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateUserProfileLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-updateUserProfile:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-UpdateUserProfileLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllUsersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-getAllUsers:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-GetAllUsersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetUserProfileLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-getUserProfile:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-GetUserProfileLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-loginUser:39",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-LoginUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteStoryLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:367265344708:function:storytime-user-service-dev-deleteStory:25",
        "Description": "Current Lambda function version",
        "ExportName": "sls-storytime-user-service-dev-DeleteStoryLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://jn07w6w57c.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-storytime-user-service-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-863edeb2-807a",
        "ExportName": "sls-storytime-user-service-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}